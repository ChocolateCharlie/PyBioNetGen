# .net file containing at least some output from all blocks
# to be used for .net file parsing creation

begin parameters
    # functions
    1 kp                       0.5  # Constant
    2 km                       0.1  # Constant
    3 k_synthC                 0.5  # Constant
    4 k_degrC                  0.5  # Constant
    5 __R1_local1              k_synthC*(0^2)  # ConstantExpression
    6 __R1_local2              k_synthC*(1^2)  # ConstantExpression
    7 __R1_local3              k_synthC*(2^2)  # ConstantExpression
    8 __R1_local4              k_synthC*(3^2)  # ConstantExpression
    # energy patterns
    9 Gf_up                    0  # Constant
   10 Gf_misalign              0.7  # Constant
   11 Eact0_flip               1  # Constant
   12 phi                      0.5  # Constant
   13 __R1_local1_EP           exp((-(Eact0_flip+(phi*(Gf_up+Gf_misalign+Gf_misalign+Gf_misalign+Gf_misalign)))))  # ConstantExpression
   14 __R1_local2_EP           exp((-(Eact0_flip+(phi*(Gf_up+Gf_misalign+Gf_misalign)))))  # ConstantExpression
   15 __R1_local3_EP           exp((-(Eact0_flip+(phi*(Gf_up+Gf_misalign+Gf_misalign)))))  # ConstantExpression
   16 __reverse__R1_local1_EP  exp((-(Eact0_flip+((1-phi)*((-Gf_up)+(-Gf_misalign)+(-Gf_misalign)+(-Gf_misalign)+(-Gf_misalign))))))  # ConstantExpression
   # compartments
   17 L0                       1000  # Constant
   18 R0                       200  # Constant
   19 TF0                      200  # Constant
   20 DNA0                     2  # Constant
   21 Im0                      40  # Constant
   22 NP0                      4  # Constant
   23 nEndo                    5  # Constant
   16 kp_LR                    0.1  # Constant
   17 km_LR                    1.0  # Constant
   18 kp_LL                    0.1  # Constant
   19 km_LL                    1.0  # Constant
   20 k_R_endo                 1.0  # Constant
   # population maps
   21 f       0.01  # Constant
   22 NA      6.0221e23  # Constant
   23 V       1e-12*f  # ConstantExpression
   24 L0      (500e-9*NA)*V  # ConstantExpression
   25 R0      (100e-9*NA)*V  # ConstantExpression
   26 A0      (100e-9*NA)*V  # ConstantExpression
   27 B0      (100e-9*NA)*V  # ConstantExpression
   28 C0      (100e-9*NA)*V  # ConstantExpression
   29 BC0     (100e-9*NA)*V  # ConstantExpression
   30 kp1     10e6/(NA*V)  # ConstantExpression
   31 km1     1.0  # Constant
   32 k2      1.0  # Constant
   33 k_lump  10000  # Constant
end parameters

begin species
    # functions
    1 A(b,b,b) 1
    2 B(a) 3
    3 C() 0
    4 $Trash() 0
    5 A(b!1,b,b).B(a!1) 0
    6 A(b!1,b!2,b).B(a!1).B(a!2) 0
    7 A(b!1,b!2,b!3).B(a!1).B(a!2).B(a!3) 0
    # energy patterns
    8 M(e!1,n!2,s!3,sp~dn,w!4).M(e!5,n!6,s!7,sp~dn,w!8).M(e!9,n!7,s!10,sp~dn,w!11).M(e!8,n!12,s!13,sp~dn,w!14).M(e!11,n!13,s!15,sp~dn,w!16).M(e!4,n!10,s!6,sp~dn,w!17).M(e!14,n!3,s!18,sp~dn,w!5).M(e!16,n!18,s!2,sp~dn,w!9).M(e!17,n!15,s!12,sp~dn,w!1) 1
    9 M(e!1,n!2,s!3,sp~up,w!4).M(e!5,n!6,s!7,sp~dn,w!8).M(e!9,n!7,s!10,sp~dn,w!11).M(e!8,n!12,s!13,sp~dn,w!14).M(e!11,n!13,s!15,sp~dn,w!16).M(e!4,n!10,s!6,sp~dn,w!17).M(e!14,n!3,s!18,sp~dn,w!5).M(e!16,n!18,s!2,sp~dn,w!9).M(e!17,n!15,s!12,sp~dn,w!1) 0
   10 M(e!1,n!2,s!3,sp~up,w!4).M(e!5,n!6,s!7,sp~up,w!8).M(e!8,n!9,s!10,sp~up,w!11).M(e!4,n!7,s!12,sp~up,w!13).M(e!14,n!12,s!6,sp~dn,w!15).M(e!15,n!16,s!9,sp~dn,w!17).M(e!17,n!3,s!18,sp~dn,w!14).M(e!11,n!18,s!2,sp~dn,w!5).M(e!13,n!10,s!16,sp~dn,w!1) 0
   11 M(e!1,n!2,s!3,sp~up,w!4).M(e!5,n!3,s!6,sp~up,w!7).M(e!4,n!8,s!9,sp~up,w!10).M(e!11,n!12,s!13,sp~up,w!14).M(e!10,n!13,s!15,sp~up,w!1).M(e!14,n!6,s!2,sp~up,w!16).M(e!7,n!9,s!17,sp~up,w!18).M(e!18,n!15,s!12,sp~dn,w!5).M(e!16,n!17,s!8,sp~dn,w!11) 0
   # compartments
   12 @EC::L(d,r) L0
   13 @PM::R(l,tf~Y) R0
   14 @CP::TF(d~Y,dna,im,r) TF0
   15 @NU::DNA(p1,p2) DNA0
   16 @CP::Im(cargo,fg) Im0
   17 @NM::NP(fg) NP0
   18 @CP::$Sink() 0
   19 @PM::L(d,r!1)@EC.R(l!1,tf~Y) 0
   20 @EC::L(d!1,r).L(d!1,r) 0
   21 @NM::Im(cargo!1,fg!2)@NU.NP(fg!2).P1(dna,im!1)@NU 0\
   # population maps
   22 L(r) L0
   23 R(a~0,b~0,l) R0
   24 A(b~0,r) A0
   25 B(c,r) B0
   26 C(b) C0
   27 B(c!1,r).C(b!1) BC0
   28 L(r!1).R(a~0,b~0,l!1) 0
   29 L(r!1).R(a~P,b~0,l!1) 0
   30 L(r!1).R(a~0,b~P,l!1) 0
   31 R(a~P,b~0,l) 0
   32 R(a~0,b~P,l) 0
   33 L(r!1).R(a~P,b~P,l!1) 0
   34 A(b~0,r!1).L(r!2).R(a~P!1,b~0,l!2) 0
   35 B(c,r!1).L(r!2).R(a~0,b~P!1,l!2) 0
   36 B(c!1,r!2).C(b!1).L(r!3).R(a~0,b~P!2,l!3) 0
end species

begin reactions
    1 1 1,3 __R1_local1 #_R1
    2 1,2 5 3*kp #_R2
    3 3 4 k_degrC #_R3
    4 5 3,5 __R1_local2 #_R1
    5 2,5 6 2*kp #_R2
    6 5 1,2 km #_reverse__R2
    7 6 3,6 __R1_local3 #_R1
    8 2,6 7 kp #_R2
    9 6 2,5 2*km #_reverse__R2
   10 7 3,7 __R1_local4 #_R1
   11 7 2,6 3*km #_reverse__R2
   12 1 2 9*__R1_local1_EP #_R1
   13 2 3 2*__R1_local1_EP #_R1
   14 2 4 2*__R1_local1_EP #_R1
   15 2 5 2*__R1_local2_EP #_R1
   16 2 6 2*__R1_local3_EP #_R1
   17 2 1 __reverse__R1_local1_EP #_reverse__R1
   18 12 14 k_R_endo #Rule3
   19 1,2 8 0.05*kp_LR #Rule1 unit_conversion=1/vol_EC
   20 1,1 9 0.025*kp_LL #Rule2 unit_conversion=1/vol_EC
   21 17 21,27 km_LL #_reverse_Rule2
   # population maps
   22 1,2 7 kp1 #_R1
   23 4,5 6 kp6 #_R8
   24 6 4,5 km6 #_reverse__R8
   25 7 1,2 km1 #_reverse__R1
   26 7 8 k2 #_R2
   27 7 9 k2 #_R3
   28 8 1,10 km1 #_reverse__R1
   29 9 1,11 km1 #_reverse__R1
   30 9 12 k2 #_R2
   31 8 12 k2 #_R3
   32 8 7 k3 #_R4
   33 9 7 k3 #_R5
   34 3,8 13 kp4 #_R6
   35 4,9 14 kp5 #_R7
   36 6,9 15 kp5 #_R7
   37 1,10 8 kp1 #_R1
   38 1,11 9 kp1 #_R1
   39 12 1,16 km1 #_reverse__R1
   40 13 1,17 km1 #_reverse__R1
end reactions

begin groups
    # functions
    1 Atot                 1,5,6,7
    2 Btot                 2,5,2*6,3*7
    3 Ctot                 3
    4 AB0                  1
    5 AB1                  5
    6 AB2                  6
    7 AB3                  7
    8 AB_motif             5,2*6,3*7
    # energy patterns
    9 M_spUp               2,2*3,2*4,2*5,2*6,3*7,3*8,3*9,3*10,3*11,3*12,3*13,3*14,3*15,3*16,3*17,3*18,4*19,4*20,4*21,4*22,4*23,4*24,4*25,4*26,4*27,4*28,4*29,4*30,4*31,4*32,5*33,5*34,5*35,5*36,5*37,5*38,5*39,5*40,5*41,5*42,5*43,5*44,5*45,5*46,6*47,6*48,6*49,6*50,6*51,6*52,6*53,6*54,6*55,6*56,6*57,6*58,7*59,7*60,7*61,7*62,8*63,9*64
   10 M_spDown             9*1,8*2,7*3,7*4,7*5,7*6,6*7,6*8,6*9,6*10,6*11,6*12,6*13,6*14,6*15,6*16,6*17,6*18,5*19,5*20,5*21,5*22,5*23,5*24,5*25,5*26,5*27,5*28,5*29,5*30,5*31,5*32,4*33,4*34,4*35,4*36,4*37,4*38,4*39,4*40,4*41,4*42,4*43,4*44,4*45,4*46,3*47,3*48,3*49,3*50,3*51,3*52,3*53,3*54,3*55,3*56,3*57,3*58,2*59,2*60,2*61,2*62,63
   11 M_spAny              9*1,9*2,9*3,9*4,9*5,9*6,9*7,9*8,9*9,9*10,9*11,9*12,9*13,9*14,9*15,9*16,9*17,9*18,9*19,9*20,9*21,9*22,9*23,9*24,9*25,9*26,9*27,9*28,9*29,9*30,9*31,9*32,9*33,9*34,9*35,9*36,9*37,9*38,9*39,9*40,9*41,9*42,9*43,9*44,9*45,9*46,9*47,9*48,9*49,9*50,9*51,9*52,9*53,9*54,9*55,9*56,9*57,9*58,9*59,9*60,9*61,9*62,9*63,9*64
   12 Misaligned           4*2,8*3,8*4,6*5,6*6,12*7,10*8,10*9,10*10,8*11,10*12,8*13,12*14,8*15,8*16,6*17,6*18,12*19,12*20,12*21,12*22,10*23,8*24,10*25,8*26,10*27,10*28,12*29,8*30,8*31,8*32,10*33,10*34,12*35,12*36,12*37,12*38,10*39,10*40,8*41,12*42,8*43,8*44,8*45,8*46,10*47,8*48,10*49,8*50,10*51,10*52,12*53,8*54,12*55,8*56,6*57,6*58,8*59,6*60,8*61,6*62,4*63
   13 M_total              9*1,9*2,9*3,9*4,9*5,9*6,9*7,9*8,9*9,9*10,9*11,9*12,9*13,9*14,9*15,9*16,9*17,9*18,9*19,9*20,9*21,9*22,9*23,9*24,9*25,9*26,9*27,9*28,9*29,9*30,9*31,9*32,9*33,9*34,9*35,9*36,9*37,9*38,9*39,9*40,9*41,9*42,9*43,9*44,9*45,9*46,9*47,9*48,9*49,9*50,9*51,9*52,9*53,9*54,9*55,9*56,9*57,9*58,9*59,9*60,9*61,9*62,9*63,9*64
   # compartments
   15 Tot_L                1,8,2*9,2*11,2*12,2*14,2*15,2*17,2*19,21,22,2*23,2*24,2*25,2*26,27,2*28,2*30,32,33,2*34,2*35,2*36,2*37,2*38,40,2*41,2*42,2*43,2*44,46,2*47,2*48,2*50,2*51,2*52,54,2*55,2*56,2*57
   16 Tot_R                2,8,11,2*12,2*14,2*15,17,18,19,20,21,22,2*23,2*24,2*25,28,29,30,31,32,33,2*34,2*35,2*36,2*37,38,39,40,2*41,2*42,2*43,44,45,46,2*47,2*48,2*50,2*51,52,53,54,2*55,2*56,2*57
   17 Tot_TF               3,25,30,31,33,35,36,2*37,38,39,40,41,2*42,2*43,44,45,46,2*47,48,49,2*50,51,52,53,54,55,2*56,57,2*58,2*59,2*60,2*61,2*62,2*63,64,2*65,2*75
   18 Tot_DNA              4,65,74,75
   19 Tot_P2               78
   # population maps
   20 LR                   7,8,9,12,13,14,15,20,21,22,23,28,29,30,32,33,39,40,41,42,49,50,51,52
   21 Rp                   8,9,10,11,2*12,13,14,15,2*16,17,18,19,2*20,2*21,2*22,23,2*24,2*25,2*26,27,2*28,2*29,2*30,32,33,2*34,2*35,2*36,37,38,2*39,2*40,2*41,2*42,2*43,2*44,2*47,2*48,2*49,2*50,2*51,2*52,2*53,2*54,2*55,2*56
   22 Ap                   23,27,28,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56
   23 RC                   15,19,21,25,30,33,36,38,40,42,44,48,50,51,2*52,54,55,2*56
   24 Ltot                 1,7,8,9,12,13,14,15,20,21,22,23,28,29,30,32,33,39,40,41,42,49,50,51,52
   25 Rtot                 2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56
   26 Atot                 3,13,17,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56
   27 Btot                 4,6,14,15,18,19,20,21,24,25,29,30,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,2*49,2*50,2*51,2*52,2*53,2*54,2*55,2*56
   28 Ctot                 5,6,15,19,21,25,30,33,36,38,40,42,44,46,48,50,51,2*52,54,55,2*56
end groups